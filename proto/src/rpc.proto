syntax = "proto3";

package rpc;

message Request {
  message GetContractState {
    bytes address = 1;
  }

  message GetTransaction {
    bytes id = 1;
  }

  message GetDstTransaction {
    bytes message_hash = 1;
  }

  message GetTransactionsList {
    bytes           account             = 1;
    optional uint64 last_transaction_lt = 2;
    uint32          limit               = 3;
  }

  message GetCapabilities {}

  message GetLatestKeyBlock {}

  message GetBlockchainConfig {}

  message GetStatus {}

  message GetAccountsByCodeHash {
    bytes           code_hash     = 1;
    optional bytes  continuation  = 2;
    uint32          limit         = 3;
  }

  message SendMessage {
    bytes message = 1;
  }

  oneof Call {
    GetCapabilities        get_capabilities           = 1;
    GetContractState       get_contract_state         = 2;
    GetTransaction         get_transaction            = 3;
    GetDstTransaction      get_dst_transaction        = 4;
    GetTransactionsList    get_transactions_list      = 5;
    GetAccountsByCodeHash  get_accounts_by_code_hash  = 6;
    GetStatus              get_status                 = 7;
    GetLatestKeyBlock      get_latest_key_block       = 8;
    GetBlockchainConfig    get_blockchain_config      = 9;
    SendMessage            send_message               = 10;
  }
}

message Response {
  message GetRawTransaction {
    optional bytes transaction = 1;
  }

  message GetTransactionsList {
    repeated bytes transactions = 1;
  }

  message GetTimings {
    uint32  last_mc_block_seqno               = 1;
    uint32  last_shard_client_mc_block_seqno  = 2;
    uint32  last_mc_utime                     = 3;
    int64   mc_time_diff                      = 4;
    int64   shard_client_time_diff            = 5;
  }

  message GetStatus {
    bool ready = 1;
  }

  message GetCapabilities {
    repeated string capabilities = 1;
  }

  message GetLatestKeyBlock {
    bytes block = 1;
  }

  message GetBlockchainConfig {
    int32 global_id = 1;
    bytes config     = 2;
  }

  message SendMessage {}

  message GetAccountsByCodeHash {
    repeated bytes account= 1;
  }

  message GetContractState {
    message ContractState {
      message Known {
        uint64  gen_lt     = 1;
        uint32  gen_utime  = 2;
      }

      message Unknown {}

      message Exact {
        uint64  lt    = 1;
        bytes   hash  = 2;
      }

      message Inexact {
        uint64 latest_lt = 1;
      }

      bytes account = 1;

      oneof GenTimings {
        Known   known   = 2;
        Unknown unknown = 3;
      }

      oneof LastTransactionId {
        Exact   exact   = 4;
        Inexact inexact = 5;
      }
    }

    optional ContractState contract_state = 1;
  }

  oneof Result {
    GetRawTransaction       get_raw_transaction     = 1;
    GetTransactionsList     get_transactions_list   = 2;
    GetTimings              get_timings             = 3;
    GetStatus               get_status              = 4;
    GetCapabilities         get_capabilities        = 5;
    GetLatestKeyBlock       get_latest_key_block    = 6;
    GetBlockchainConfig     get_blockchain_config   = 7;
    GetAccountsByCodeHash   get_accounts            = 8;
    GetContractState        get_contract_state      = 9;
    SendMessage             send_message            = 10;
  }
}
